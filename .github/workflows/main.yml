name: Build and Release Windows EXE

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (overrides push tag)'
        required: false
        default: ''

jobs:
  build:
    name: Build EXE and Bundle Artifacts
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt pyinstaller

      - name: Build executable with PyInstaller
        working-directory: src
        run: |
          pyinstaller --noconfirm --clean --onefile \
            --name vpc-get-high-scores-image \
            createHighScoreImage.py

      - name: Prepare release folder
        run: |
          mkdir release
          cp src/dist/windows/vpc-get-high-scores-image.exe release/
          cp src/POPMENU_GetHighScoresForAllTables.bat release/
          cp src/playsound.exe release/
          cp src/UpdateHighScoreStart.mp3 release/
          cp src/UpdateHighScoreStop.mp3 release/

      - name: Upload bundled artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-files
          path: release/

  release:
    name: Create Release & Upload Assets via GH CLI
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download bundled artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-files
          path: artifact

      - name: Determine release tag
        id: tagger
        run: |
          if [ -n "${{ github.event.inputs.release_tag }}" ]; then
            echo "tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          else
            echo "tag=unreleased-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tagger.outputs.tag }}
          name: Release ${{ steps.tagger.outputs.tag }}
          body: |
            Auto-generated release for ${{ steps.tagger.outputs.tag }}
            See CHANGELOG.md for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Upload all assets with GH CLI
        run: |
          files=(artifact/release/*)
          [ ${#files[@]} -gt 0 ] || exit 1
          gh release upload ${{ steps.tagger.outputs.tag }} "${files[@]}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
